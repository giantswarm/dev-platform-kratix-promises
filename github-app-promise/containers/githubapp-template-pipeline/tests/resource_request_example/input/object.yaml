apiVersion: promise.platform.giantswarm.io/v1beta1
kind: githubapp
metadata:
  name: my-go-project-1
spec:
  githubRepo:
    name: my-go-project-1
    spec:
      backstageCatalogEntity:
        owner: group:default/team-platform
        lifecycle: experimental
      repository:
        name: my-go-project-1
        owner: DemoTechInc
        description: "My first kratix project"
        templateSource: giantswarm/devplatform-template-go-service
        visibility: private
      registryInfoConfigMapRef:
        name: github-oci-registry-info
      githubTokenSecretRef:
        name: dev-platform-gh-access
  appDeployment:
    name: my-go-project-dev
    spec:
      database:
        engine: aurora-postgresql
        eso:
          clusterSsaField: demotech_rcc
          tenantCluster:
            apiServerEndpoint: demotech-rds-apiserver.eu-central-1.elb.amazonaws.com
            clusterName: demotech-rds
            enabled: true
        providerConfigRef:
          name: demotech-rcc-postgresql-provider-config
      interval: 1m
      ingressHost: demo.tech.none
      kubeConfig:
        secretRef:
          name: demotech-rds-kubeconfig
      releaseName: my-go-project-1
      storageNamespace: default
      suspend: false
      targetNamespace: default
      timeout: 3m
      values: {}
