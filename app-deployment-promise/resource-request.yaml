apiVersion: promise.platform.giantswarm.io/v1beta1
kind: appdeployment
metadata:
  name: my-go-project-1
spec:
  database:
    connectionSecretRef:
      name: demotech-rcc-rds-master
    engine: aurora-postgresql
    eso:
      clusterSsaField: demotech_rcc
      tenantCluster:
        apiServerEndpoint: demotech-rds-apiserver.eu-central-1.elb.amazonaws.com
        clusterName: demotech-rds
        enabled: true
    providerConfigRef:
      name: demotech-rcc-postgresql-provider-config
  interval: 1m
  kubeConfig:
    secretRef:
      name: demotech-rds-kubeconfig
  releaseName: my-go-project-1
  statusConfigMapReference:
    name: my-go-project-1-info
  storageNamespace: default
  suspend: false
  targetNamespace: default
  timeout: 3m
  values:
    autoscaling:
      enabled: false
    database:
      connectionSecretName: my-go-project-1-rds-user
      name: my-go-project-1
    inMemoryStore: false
    ingress:
      annotations:
        kubernetes.io/tls-acme: "true"
      enabled: true
      host: my-go-project-1.host.com
      tls:
        - hosts:
            - my-go-project-1.host.com
          secretName: my-go-project-1
    monitoring:
      serviceMonitor:
        enabled: true
        extraLabels:
          application.giantswarm.io/team: my-team
    pdb:
      enabled: false
    redisConnectionSecretName: demotech-rcc-elasticache-user
